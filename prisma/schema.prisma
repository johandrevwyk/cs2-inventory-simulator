//---------------------------------------------------------------------------------------------
//  Copyright (c) Ian Lucas. All rights reserved.
//  Licensed under the MIT License. See License.txt in the project root for license information.
//--------------------------------------------------------------------------------------------*/

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  authTokens ApiAuthToken[]
  avatar String
  caches UserCache[]
  createdAt DateTime @default(now())
  id String @id @unique
  inventory String?
  name String
  overwrites RuleOverwrite[]
  preferences UserPreferences?
  syncedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserCache {
  @@id([url, userId])
  body String
  timestamp DateTime
  url String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model UserPreferences {
  background String?
  hideFreeItems String?
  language String?
  statsForNerds String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @id
}

model ApiCredential {
  apiKey String @id
  authTokens ApiAuthToken[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ApiAuthToken {
  apiKey String
  createdAt DateTime @default(now())
  credential ApiCredential @relation(fields: [apiKey], references: [apiKey])
  token String @id @default(uuid())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model Rule {
  name String @id @unique
  overwrites RuleOverwrite[]
  type String @default("string")
  value String
}

model RuleOverwrite {
  @@id([name, userId])
  name String
  rule Rule @relation(fields: [name], references: [name])
  user User @relation(fields: [userId], references: [id])
  userId String
  value String
}
